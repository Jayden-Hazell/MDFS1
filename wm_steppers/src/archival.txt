//This document is all the previous code that's been altered by may be important for future reference.

void stepperNextStep() {
  if (us_current_time - us_last_stepper_motion >= f_T) {
    digitalWrite(i_step_pin, b_last_step);
    us_last_stepper_motion = us_current_time;
    b_last_step = !b_last_step;
  }
}

void stepperMoving() {  // current function work
  for (int i = 0; i < (i_steps * 2); i++) {
    stepperNextStep();
  }
}

float setRPM(int rpm, float res) {               // assuming 150RPM, 0.9deg res
  float freq = (float)rpm / ((res / 360) * 60);  // freq = 1000
  float period = 1 / freq;                       // period = 1/1000
  return (period * 0.5) * 1000;                  // T = 500 microseconds
}

// RPM
void readRPM() {
  if (Serial.available() > 0) {
    s_RPM = Serial.readString();
    f_T = setRPM(s_RPM.toInt(), f_resolution);
    Serial.print(s_RPM);
  }
}

void stepperProcess() {
  // readRPM(); //not quite needed for now
  // stepperSelection();
  // stepperDirection(); //code has been removed, likely unneeded.
  stepperMoving();
}

//calculation code for RPM, not needed anymore.